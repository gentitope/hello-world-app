name: CICD

on:
  push:
    branches: [ demo ]

jobs:

  deploy:
    name: Build image
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.run_number }}

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.24.2'
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: gentitope/hello-world-app:${{ env.IMAGE_TAG }}
          file: deploy/Dockerfile

#      - name: Vilicus Scan
#        uses: edersonbrilhante/vilicus-github-action@main
#        with:
#          image: gentitope/hello-world-app:${{ env.IMAGE_TAG }}
#
#      - name: Upload results to github security
#        uses: github/codeql-action/upload-sarif@v1
#        with:
#          sarif_file: artifacts/results.sarif

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: gentitope/hello-world-app:${{ env.IMAGE_TAG }}
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Replace Image Tag in YAML deployment
        uses: datamonsters/replace-action@v2
        with:
          files: deploy/demo/deployment.yaml
          replacements: 'IMAGE_TAG=${{ env.IMAGE_TAG }}'

      - name: Update kube config
        run: aws eks update-kubeconfig --name eks-cluster --region eu-west-1

      - name: Deploy image to Amazon EKS
        run: |
          kubectl apply -f deploy/demo/deployment.yaml
          kubectl apply -f deploy/demo/svc.yaml
          kubectl apply -f deploy/demo/configmap.yaml
          kubectl apply -f deploy/demo/secret.yaml